// basecondition ~ scss
// copyright 2011-2015 ~ basecondition.com
// licensed under MIT ~ git.io/OJYZgw

// forked from git.io/1dMSeg

// @method: transition
// @usage: @include transition (all 2s ease-in-out);
//         @include transition (opacity 1s ease-in 2s, width 2s ease-out);
// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.

@mixin transition($properties...) {
    // Fix for vendor-prefix transform property
    $needs-prefixes: false;
    $webkit: ();
    $moz: ();
    $spec: ();

    // Create lists for vendor-prefixed transform
    @each $list in $properties {
        @if nth($list, 1) == "transform" {
            $needs-prefixes: true;
            $list1: -webkit-transform;
            $list2: -moz-transform;
            $list3: ();

            @each $var in $list {
                $list3: join($list3, $var);

                @if $var != "transform" {
                    $list1: join($list1, $var);
                    $list2: join($list2, $var);
                }
            }

            $webkit: append($webkit, $list1);
            $moz: append($moz, $list2);
            $spec: append($spec, $list3);
        } @else { // Create lists for non-prefixed transition properties
            $webkit: append($webkit, $list, comma);
            $moz: append($moz, $list, comma);
            $spec: append($spec, $list, comma);
        }
    }

    @if $needs-prefixes {
        -webkit-transition: $webkit;
        -moz-transition: $moz;
        transition: $spec;
    } @else {
        @if length($properties) >= 1 {
            @include prefixer(transition, $properties, webkit moz spec);
        } @else {
            $properties: all 0.15s ease-out 0s;
            @include prefixer(transition, $properties, webkit moz spec);
        }
    }
}

// @method: transition-property
// @usage: @include transition-property (transform, opacity);

@mixin transition-property($properties...) {
    -webkit-transition-property: transition-property-names($properties, 'webkit');
    -moz-transition-property: transition-property-names($properties, 'moz');
    transition-property: transition-property-names($properties, false);
}

// @method: transition-duration
// @usage: @include transition-duration();

@mixin transition-duration($times...) {
    @include prefixer(transition-duration, $times, webkit moz spec);
}

// @method: transition-timing-function
// @usage: @include transition-timing-function(linear);
// @syntax: ease|linear|ease-in|ease-out|ease-in-out|cubic-bezier()

@mixin transition-timing-function($motions...) {
    @include prefixer(transition-timing-function, $motions, webkit moz spec);
}

// @method: transition-delay
// @usage: @include transition-delay(10);
// @syntax: <numeric>

@mixin transition-delay($times...) {
    @include prefixer(transition-delay, $times, webkit moz spec);
}
